{"ast":null,"code":"var _jsxFileName = \"/Users/sayedraheel/Desktop/voice_llms/voice_test/frontend/src/components/AudioProcessor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { Mic, Square } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioProcessor = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [aiResponse, setAiResponse] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const startRecording = async () => {\n    try {\n      setError(''); // Clear any previous errors\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        await processAudio(audioBlob);\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError('Error accessing microphone. Please ensure microphone permissions are granted.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n  const processAudio = async audioBlob => {\n    setIsProcessing(true);\n    setError(''); // Clear any previous errors\n    try {\n      // Convert blob to base64\n      const reader = new FileReader();\n      reader.readAsDataURL(audioBlob);\n      reader.onloadend = async () => {\n        try {\n          const base64Audio = reader.result.split(',')[1];\n          console.log('Sending request to backend...');\n          const response = await fetch('http://localhost:8001/process-audio', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              audio: base64Audio\n            })\n          });\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n          const data = await response.json();\n          setTranscription(data.transcription);\n          setAiResponse(data.ai_response);\n\n          // Play audio response\n          if (data.audio_response) {\n            const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n            audio.play().catch(e => console.error('Error playing audio:', e));\n          }\n        } catch (error) {\n          console.error('Error processing request:', error);\n          setError(`Error processing audio: ${error.message}`);\n        }\n      };\n      reader.onerror = () => {\n        setError('Error reading audio file');\n      };\n    } catch (error) {\n      console.error('Error processing audio:', error);\n      setError(`Error processing audio: ${error.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-md mx-auto bg-white rounded-xl shadow-lg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-6\",\n      children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-3 text-red-500 bg-red-100 rounded\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isRecording ? stopRecording : startRecording,\n          disabled: isProcessing,\n          className: `p-4 rounded-full ${isRecording ? 'bg-red-500' : 'bg-blue-500'} text-white hover:opacity-80 transition-opacity disabled:opacity-50`,\n          children: isRecording ? /*#__PURE__*/_jsxDEV(Square, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-600\",\n        children: \"Processing your audio...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), transcription && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Transcription:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: transcription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), aiResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"AI Response:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-700\",\n          children: aiResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioProcessor, \"qoHO5QsI/k/rnE98niLmf3NKUsg=\");\n_c = AudioProcessor;\nexport default AudioProcessor;\nvar _c;\n$RefreshReg$(_c, \"AudioProcessor\");","map":{"version":3,"names":["React","useState","useRef","Mic","Square","jsxDEV","_jsxDEV","AudioProcessor","_s","isRecording","setIsRecording","transcription","setTranscription","aiResponse","setAiResponse","isProcessing","setIsProcessing","error","setError","mediaRecorderRef","audioChunksRef","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","processAudio","start","console","stopRecording","stop","getTracks","forEach","track","reader","FileReader","readAsDataURL","onloadend","base64Audio","result","split","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","json","ai_response","audio_response","Audio","play","catch","e","message","onerror","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/sayedraheel/Desktop/voice_llms/voice_test/frontend/src/components/AudioProcessor.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { Mic, Square } from 'lucide-react';\n\nconst AudioProcessor = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [transcription, setTranscription] = useState('');\n  const [aiResponse, setAiResponse] = useState('');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n\n  const startRecording = async () => {\n    try {\n      setError(''); // Clear any previous errors\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        await processAudio(audioBlob);\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError('Error accessing microphone. Please ensure microphone permissions are granted.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n\n  const processAudio = async (audioBlob) => {\n    setIsProcessing(true);\n    setError(''); // Clear any previous errors\n    try {\n      // Convert blob to base64\n      const reader = new FileReader();\n      reader.readAsDataURL(audioBlob);\n      \n      reader.onloadend = async () => {\n        try {\n          const base64Audio = reader.result.split(',')[1];\n\n          console.log('Sending request to backend...');\n          const response = await fetch('http://localhost:8001/process-audio', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n              audio: base64Audio\n            })\n          });\n\n          if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n          }\n\n          const data = await response.json();\n          setTranscription(data.transcription);\n          setAiResponse(data.ai_response);\n\n          // Play audio response\n          if (data.audio_response) {\n            const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n            audio.play().catch(e => console.error('Error playing audio:', e));\n          }\n        } catch (error) {\n          console.error('Error processing request:', error);\n          setError(`Error processing audio: ${error.message}`);\n        }\n      };\n\n      reader.onerror = () => {\n        setError('Error reading audio file');\n      };\n    } catch (error) {\n      console.error('Error processing audio:', error);\n      setError(`Error processing audio: ${error.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"p-6 max-w-md mx-auto bg-white rounded-xl shadow-lg\">\n      <div className=\"space-y-6\">\n        {error && (\n          <div className=\"p-3 text-red-500 bg-red-100 rounded\">\n            {error}\n          </div>\n        )}\n\n        <div className=\"flex justify-center\">\n          <button\n            onClick={isRecording ? stopRecording : startRecording}\n            disabled={isProcessing}\n            className={`p-4 rounded-full ${\n              isRecording ? 'bg-red-500' : 'bg-blue-500'\n            } text-white hover:opacity-80 transition-opacity disabled:opacity-50`}\n          >\n            {isRecording ? <Square size={24} /> : <Mic size={24} />}\n          </button>\n        </div>\n\n        {isProcessing && (\n          <div className=\"text-center text-gray-600\">\n            Processing your audio...\n          </div>\n        )}\n\n        {transcription && (\n          <div className=\"space-y-2\">\n            <h3 className=\"font-semibold\">Transcription:</h3>\n            <p className=\"text-gray-700\">{transcription}</p>\n          </div>\n        )}\n\n        {aiResponse && (\n          <div className=\"space-y-2\">\n            <h3 className=\"font-semibold\">AI Response:</h3>\n            <p className=\"text-gray-700\">{aiResponse}</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AudioProcessor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,SAASC,GAAG,EAAEC,MAAM,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,gBAAgB,GAAGjB,MAAM,CAAC,IAAI,CAAC;EACrC,MAAMkB,cAAc,GAAGlB,MAAM,CAAC,EAAE,CAAC;EAEjC,MAAMmB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACFH,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACd,MAAMI,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzE,MAAMC,aAAa,GAAG,IAAIC,aAAa,CAACN,MAAM,CAAC;MAC/CH,gBAAgB,CAACU,OAAO,GAAGF,aAAa;MACxCP,cAAc,CAACS,OAAO,GAAG,EAAE;MAE3BF,aAAa,CAACG,eAAe,GAAIC,KAAK,IAAK;QACzC,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,GAAG,CAAC,EAAE;UACvBb,cAAc,CAACS,OAAO,CAACK,IAAI,CAACH,KAAK,CAACC,IAAI,CAAC;QACzC;MACF,CAAC;MAEDL,aAAa,CAACQ,MAAM,GAAG,YAAY;QACjC,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAACjB,cAAc,CAACS,OAAO,EAAE;UAAES,IAAI,EAAE;QAAY,CAAC,CAAC;QACzE,MAAMC,YAAY,CAACH,SAAS,CAAC;MAC/B,CAAC;MAEDT,aAAa,CAACa,KAAK,CAAC,CAAC;MACrB9B,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDC,QAAQ,CAAC,+EAA+E,CAAC;IAC3F;EACF,CAAC;EAED,MAAMwB,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIvB,gBAAgB,CAACU,OAAO,IAAIpB,WAAW,EAAE;MAC3CU,gBAAgB,CAACU,OAAO,CAACc,IAAI,CAAC,CAAC;MAC/BjC,cAAc,CAAC,KAAK,CAAC;MACrBS,gBAAgB,CAACU,OAAO,CAACP,MAAM,CAACsB,SAAS,CAAC,CAAC,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACH,IAAI,CAAC,CAAC,CAAC;IAC5E;EACF,CAAC;EAED,MAAMJ,YAAY,GAAG,MAAOH,SAAS,IAAK;IACxCpB,eAAe,CAAC,IAAI,CAAC;IACrBE,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACd,IAAI;MACF;MACA,MAAM6B,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,aAAa,CAACb,SAAS,CAAC;MAE/BW,MAAM,CAACG,SAAS,GAAG,YAAY;QAC7B,IAAI;UACF,MAAMC,WAAW,GAAGJ,MAAM,CAACK,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;UAE/CZ,OAAO,CAACa,GAAG,CAAC,+BAA+B,CAAC;UAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;YAClEC,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACP,cAAc,EAAE;YAClB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;cACnBnC,KAAK,EAAEyB;YACT,CAAC;UACH,CAAC,CAAC;UAEF,IAAI,CAACI,QAAQ,CAACO,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBR,QAAQ,CAACS,MAAM,EAAE,CAAC;UAC3D;UAEA,MAAMhC,IAAI,GAAG,MAAMuB,QAAQ,CAACU,IAAI,CAAC,CAAC;UAClCrD,gBAAgB,CAACoB,IAAI,CAACrB,aAAa,CAAC;UACpCG,aAAa,CAACkB,IAAI,CAACkC,WAAW,CAAC;;UAE/B;UACA,IAAIlC,IAAI,CAACmC,cAAc,EAAE;YACvB,MAAMzC,KAAK,GAAG,IAAI0C,KAAK,CAAC,yBAAyBpC,IAAI,CAACmC,cAAc,EAAE,CAAC;YACvEzC,KAAK,CAAC2C,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,CAAC,IAAI9B,OAAO,CAACxB,KAAK,CAAC,sBAAsB,EAAEsD,CAAC,CAAC,CAAC;UACnE;QACF,CAAC,CAAC,OAAOtD,KAAK,EAAE;UACdwB,OAAO,CAACxB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACjDC,QAAQ,CAAC,2BAA2BD,KAAK,CAACuD,OAAO,EAAE,CAAC;QACtD;MACF,CAAC;MAEDzB,MAAM,CAAC0B,OAAO,GAAG,MAAM;QACrBvD,QAAQ,CAAC,0BAA0B,CAAC;MACtC,CAAC;IACH,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdwB,OAAO,CAACxB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CC,QAAQ,CAAC,2BAA2BD,KAAK,CAACuD,OAAO,EAAE,CAAC;IACtD,CAAC,SAAS;MACRxD,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,oBACEV,OAAA;IAAKoE,SAAS,EAAC,oDAAoD;IAAAC,QAAA,eACjErE,OAAA;MAAKoE,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvB1D,KAAK,iBACJX,OAAA;QAAKoE,SAAS,EAAC,qCAAqC;QAAAC,QAAA,EACjD1D;MAAK;QAAA2D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAEDzE,OAAA;QAAKoE,SAAS,EAAC,qBAAqB;QAAAC,QAAA,eAClCrE,OAAA;UACE0E,OAAO,EAAEvE,WAAW,GAAGiC,aAAa,GAAGrB,cAAe;UACtD4D,QAAQ,EAAElE,YAAa;UACvB2D,SAAS,EAAE,oBACTjE,WAAW,GAAG,YAAY,GAAG,aAAa,qEAC0B;UAAAkE,QAAA,EAErElE,WAAW,gBAAGH,OAAA,CAACF,MAAM;YAAC6B,IAAI,EAAE;UAAG;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,gBAAGzE,OAAA,CAACH,GAAG;YAAC8B,IAAI,EAAE;UAAG;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAELhE,YAAY,iBACXT,OAAA;QAAKoE,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAE3C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CACN,EAEApE,aAAa,iBACZL,OAAA;QAAKoE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBrE,OAAA;UAAIoE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjDzE,OAAA;UAAGoE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAEhE;QAAa;UAAAiE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CACN,EAEAlE,UAAU,iBACTP,OAAA;QAAKoE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBrE,OAAA;UAAIoE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/CzE,OAAA;UAAGoE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAE9D;QAAU;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvE,EAAA,CA5IID,cAAc;AAAA2E,EAAA,GAAd3E,cAAc;AA8IpB,eAAeA,cAAc;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}