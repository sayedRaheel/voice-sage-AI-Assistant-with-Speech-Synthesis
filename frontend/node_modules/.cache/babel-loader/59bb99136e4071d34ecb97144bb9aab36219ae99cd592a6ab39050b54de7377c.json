{"ast":null,"code":"var _jsxFileName = \"/Users/sayedraheel/Desktop/voice_llms/voice_test/frontend/src/components/AudioChat.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef } from 'react';\n// import { Mic, Square, Loader, Volume2, MessageSquare, Waveform } from 'lucide-react';\n\n// const AudioChat = () => {\n//   const [isRecording, setIsRecording] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [error, setError] = useState('');\n//   const mediaRecorderRef = useRef(null);\n//   const audioChunksRef = useRef([]);\n//   const bottomRef = useRef(null);\n//   // You're trying to use setTranscription and setAiResponse but these states aren't defined\n//   const [transcription, setTranscription] = useState(''); // Add this\n//   const [aiResponse, setAiResponse] = useState(''); // Add this\n\n//   const startRecording = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n//       const mediaRecorder = new MediaRecorder(stream);\n//       mediaRecorderRef.current = mediaRecorder;\n//       audioChunksRef.current = [];\n\n//       mediaRecorder.ondataavailable = (event) => {\n//         if (event.data.size > 0) {\n//           audioChunksRef.current.push(event.data);\n//         }\n//       };\n\n//       mediaRecorder.onstop = async () => {\n//         const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n//         await processAudio(audioBlob);\n//       };\n\n//       mediaRecorder.start();\n//       setIsRecording(true);\n//     } catch (error) {\n//       console.error('Error accessing microphone:', error);\n//     }\n//   };\n\n//   const stopRecording = () => {\n//     if (mediaRecorderRef.current && isRecording) {\n//       mediaRecorderRef.current.stop();\n//       setIsRecording(false);\n//       mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n//     }\n//   };\n\n//   const processAudio = async (audioBlob) => {\n//     setIsProcessing(true);\n//     try {\n//       const reader = new FileReader();\n//       reader.readAsDataURL(audioBlob);\n//       reader.onloadend = async () => {\n//         const base64Audio = reader.result.split(',')[1];\n\n//         const response = await fetch('http://localhost:8003/process-audio', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({\n//             audio: base64Audio\n//           })\n//         });\n\n//         if (!response.ok) throw new Error('Network response was not ok');\n\n//         const data = await response.json();\n//         setTranscription(data.transcription);\n//         setAiResponse(data.ai_response);\n\n//         if (data.audio_response) {\n//           const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n//           audio.play();\n//         }\n//       };\n//     } catch (error) {\n//       console.error('Error processing audio:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#1a1b26] to-[#232334]\">\n//       {/* Header */}\n//       <div className=\"border-b border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\">\n//         <div className=\"max-w-4xl mx-auto flex items-center justify-between\">\n//           <h1 className=\"text-white text-2xl font-bold flex items-center gap-3\">\n//             <MessageSquare className=\"w-6 h-6 text-blue-400\" />\n//             Voice Assistant\n//           </h1>\n//           <div className=\"text-gray-400 text-sm flex items-center gap-2\">\n//             {isRecording && (\n//               <div className=\"flex items-center gap-2\">\n//                 <span className=\"animate-pulse w-2 h-2 rounded-full bg-red-500\"></span>\n//                 Recording...\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Chat container */}\n//       <div className=\"flex-1 overflow-y-auto p-6 space-y-6\">\n//         <div className=\"max-w-4xl mx-auto\">\n//           {messages.length === 0 && (\n//             <div className=\"text-center py-20\">\n//               <div className=\"w-16 h-16 mx-auto mb-6 rounded-full bg-blue-500/10 flex items-center justify-center\">\n//                 <MessageSquare className=\"w-8 h-8 text-blue-400\" />\n//               </div>\n//               <h2 className=\"text-white text-xl font-semibold mb-2\">Welcome to Voice Assistant</h2>\n//               <p className=\"text-gray-400\">Start a conversation by clicking the microphone below</p>\n//             </div>\n//           )}\n\n//           {messages.map((message, index) => (\n//             <div key={index} \n//                  className={`flex items-start space-x-3 ${message.type === 'user' ? 'justify-end' : 'justify-start'} mb-6`}>\n//               <div className={`max-w-[80%] rounded-2xl p-5 shadow-lg transform transition-all duration-200 ${\n//                 message.type === 'user' \n//                   ? 'bg-blue-500/10 text-white border border-blue-500/20' \n//                   : 'bg-[#2a2b3d] text-white'\n//               } ${message.loading ? 'opacity-50' : 'hover:scale-[1.02]'}`}>\n//                 {message.loading ? (\n//                   <div className=\"flex items-center space-x-3\">\n//                     <Loader className=\"animate-spin\" size={16} />\n//                     <span>{message.content}</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-start gap-3\">\n//                     <div className=\"w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0\">\n//                       {message.type === 'user' ? (\n//                         <div className=\"bg-blue-500/20 w-full h-full rounded-full flex items-center justify-center\">\n//                           <Volume2 size={14} className=\"text-blue-400\" />\n//                         </div>\n//                       ) : (\n//                         <div className=\"bg-purple-500/20 w-full h-full rounded-full flex items-center justify-center\">\n//                           <MessageSquare size={14} className=\"text-purple-400\" />\n//                         </div>\n//                       )}\n//                     </div>\n//                     <div className=\"flex-1\">\n//                       <div className=\"text-sm text-gray-400 mb-1\">\n//                         {message.type === 'user' ? 'You' : 'Assistant'}\n//                       </div>\n//                       <div className=\"text-white\">{message.content}</div>\n//                     </div>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           ))}\n\n//           {error && (\n//             <div className=\"p-4 text-red-400 bg-red-500/10 border border-red-500/20 rounded-lg mb-6 animate-shake\">\n//               <div className=\"flex items-center gap-2\">\n//                 <div className=\"w-4 h-4 rounded-full bg-red-500/20 flex items-center justify-center\">\n//                   <span className=\"block w-1 h-1 rounded-full bg-red-400\"></span>\n//                 </div>\n//                 {error}\n//               </div>\n//             </div>\n//           )}\n//           <div ref={bottomRef} />\n//         </div>\n//       </div>\n\n//       {/* Control bar */}\n//       <div className=\"border-t border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\">\n//         <div className=\"max-w-4xl mx-auto flex items-center gap-4\">\n//           <button\n//             onClick={isRecording ? stopRecording : startRecording}\n//             disabled={isProcessing}\n//             className={`p-4 rounded-full transition-all duration-300 transform hover:scale-105 ${\n//               isRecording \n//                 ? 'bg-red-500 hover:bg-red-600' \n//                 : 'bg-blue-500 hover:bg-blue-600'\n//             } text-white disabled:opacity-50 disabled:hover:scale-100 shadow-lg ${\n//               isRecording ? 'shadow-red-500/20' : 'shadow-blue-500/20'\n//             }`}\n//           >\n//             {isRecording ? <Square size={24} /> : <Mic size={24} />}\n//           </button>\n\n//           <div className=\"flex-1\">\n//             <div className=\"h-14 rounded-2xl bg-[#2a2b3d] flex items-center px-6 text-gray-400 border border-gray-700/50\">\n//               {isProcessing ? (\n//                 <div className=\"flex items-center gap-3\">\n//                   <Loader className=\"animate-spin\" size={16} />\n//                   <span>Processing audio...</span>\n//                 </div>\n//               ) : (\n//                 <div className=\"flex items-center gap-3\">\n//                   <MessageSquare size={16} className=\"text-blue-400\" />\n//                   <span>Click the microphone to start recording</span>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           {isProcessing && (\n//             <div className=\"w-14 h-14 rounded-full bg-[#2a2b3d] flex items-center justify-center border border-gray-700/50\">\n//               <Loader className=\"animate-spin text-blue-400\" size={20} />\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AudioChat;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Mic, Square, Loader, Volume2, MessageSquare, Send } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioChat = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const bottomRef = useRef(null);\n  const inputRef = useRef(null);\n  const scrollToBottom = () => {\n    var _bottomRef$current;\n    (_bottomRef$current = bottomRef.current) === null || _bottomRef$current === void 0 ? void 0 : _bottomRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const startRecording = async () => {\n    try {\n      setError('');\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n      mediaRecorder.ondataavailable = event => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, {\n          type: 'audio/wav'\n        });\n        await processAudio(audioBlob);\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError('Error accessing microphone. Please ensure permissions are granted.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n  const processAudio = async audioBlob => {\n    setIsProcessing(true);\n    try {\n      const reader = new FileReader();\n      reader.readAsDataURL(audioBlob);\n      reader.onloadend = async () => {\n        const base64Audio = reader.result.split(',')[1];\n        setMessages(prev => [...prev, {\n          type: 'user',\n          content: 'Recording sent...',\n          loading: true\n        }]);\n        const response = await fetch('http://localhost:8003/process-audio', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            audio: base64Audio,\n            type: 'audio'\n          })\n        });\n        if (!response.ok) throw new Error('Network response was not ok');\n        const data = await response.json();\n        setMessages(prev => [...prev.filter(msg => !msg.loading), {\n          type: 'user',\n          content: data.transcription\n        }, {\n          type: 'assistant',\n          content: data.ai_response\n        }]);\n        if (data.audio_response) {\n          const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n          await audio.play();\n        }\n      };\n    } catch (error) {\n      console.error('Error processing audio:', error);\n      setError(`Error processing audio: ${error.message}`);\n      setMessages(prev => prev.filter(msg => !msg.loading));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const handleTextSubmit = async e => {\n    e.preventDefault();\n    if (!textInput.trim() || isProcessing) return;\n    setIsProcessing(true);\n    try {\n      setMessages(prev => [...prev, {\n        type: 'user',\n        content: textInput\n      }]);\n      const response = await fetch('http://localhost:8003/process-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: textInput,\n          type: 'text'\n        })\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        type: 'assistant',\n        content: data.response\n      }]);\n      if (data.audio_response) {\n        const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n        await audio.play();\n      }\n      setTextInput('');\n    } catch (error) {\n      console.error('Error processing text:', error);\n      setError(`Error: ${error.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen bg-gradient-to-b from-[#1a1b26] to-[#232334]\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-b border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-4xl mx-auto flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-white text-2xl font-bold flex items-center gap-3\",\n          children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n            className: \"w-6 h-6 text-blue-400\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), \"Voice Assistant\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-gray-400 text-sm flex items-center gap-2\",\n          children: isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"animate-pulse w-2 h-2 rounded-full bg-red-500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), \"Recording...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto p-6 space-y-6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-t border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleTextSubmit,\n        className: \"max-w-4xl mx-auto flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: isRecording ? stopRecording : startRecording,\n          disabled: isProcessing,\n          className: `p-4 rounded-full transition-all duration-300 transform hover:scale-105 ${isRecording ? 'bg-red-500 hover:bg-red-600' : 'bg-blue-500 hover:bg-blue-600'} text-white disabled:opacity-50 disabled:hover:scale-100 shadow-lg ${isRecording ? 'shadow-red-500/20' : 'shadow-blue-500/20'}`,\n          children: isRecording ? /*#__PURE__*/_jsxDEV(Square, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(Mic, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-1 relative\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputRef,\n            type: \"text\",\n            value: textInput,\n            onChange: e => setTextInput(e.target.value),\n            disabled: isRecording || isProcessing,\n            placeholder: isProcessing ? 'Processing...' : 'Type a message or click the microphone to record',\n            className: \"w-full h-14 rounded-2xl bg-[#2a2b3d] px-6 text-white border border-gray-700/50 focus:outline-none focus:border-blue-500/50 disabled:opacity-50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !textInput.trim() || isProcessing || isRecording,\n          className: \"p-4 rounded-full bg-blue-500 hover:bg-blue-600 text-white disabled:opacity-50 transition-all duration-300 transform hover:scale-105 shadow-lg shadow-blue-500/20\",\n          children: /*#__PURE__*/_jsxDEV(Send, {\n            size: 24\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-14 h-14 rounded-full bg-[#2a2b3d] flex items-center justify-center border border-gray-700/50\",\n          children: /*#__PURE__*/_jsxDEV(Loader, {\n            className: \"animate-spin text-blue-400\",\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioChat, \"29WV7/jSon6umPIRhyqUbRBWAek=\");\n_c = AudioChat;\nexport default AudioChat;\nvar _c;\n$RefreshReg$(_c, \"AudioChat\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Mic","Square","Loader","Volume2","MessageSquare","Send","jsxDEV","_jsxDEV","AudioChat","_s","isRecording","setIsRecording","messages","setMessages","isProcessing","setIsProcessing","error","setError","textInput","setTextInput","mediaRecorderRef","audioChunksRef","bottomRef","inputRef","scrollToBottom","_bottomRef$current","current","scrollIntoView","behavior","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","ondataavailable","event","data","size","push","onstop","audioBlob","Blob","type","processAudio","start","console","stopRecording","stop","getTracks","forEach","track","reader","FileReader","readAsDataURL","onloadend","base64Audio","result","split","prev","content","loading","response","fetch","method","headers","body","JSON","stringify","ok","Error","json","filter","msg","transcription","ai_response","audio_response","Audio","play","message","handleTextSubmit","e","preventDefault","trim","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onClick","disabled","ref","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/sayedraheel/Desktop/voice_llms/voice_test/frontend/src/components/AudioChat.js"],"sourcesContent":["// import React, { useState, useRef } from 'react';\n// import { Mic, Square, Loader, Volume2, MessageSquare, Waveform } from 'lucide-react';\n\n// const AudioChat = () => {\n//   const [isRecording, setIsRecording] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const [isProcessing, setIsProcessing] = useState(false);\n//   const [error, setError] = useState('');\n//   const mediaRecorderRef = useRef(null);\n//   const audioChunksRef = useRef([]);\n//   const bottomRef = useRef(null);\n//   // You're trying to use setTranscription and setAiResponse but these states aren't defined\n//   const [transcription, setTranscription] = useState(''); // Add this\n//   const [aiResponse, setAiResponse] = useState(''); // Add this\n\n//   const startRecording = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n//       const mediaRecorder = new MediaRecorder(stream);\n//       mediaRecorderRef.current = mediaRecorder;\n//       audioChunksRef.current = [];\n\n//       mediaRecorder.ondataavailable = (event) => {\n//         if (event.data.size > 0) {\n//           audioChunksRef.current.push(event.data);\n//         }\n//       };\n\n//       mediaRecorder.onstop = async () => {\n//         const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n//         await processAudio(audioBlob);\n//       };\n\n//       mediaRecorder.start();\n//       setIsRecording(true);\n//     } catch (error) {\n//       console.error('Error accessing microphone:', error);\n//     }\n//   };\n\n//   const stopRecording = () => {\n//     if (mediaRecorderRef.current && isRecording) {\n//       mediaRecorderRef.current.stop();\n//       setIsRecording(false);\n//       mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n//     }\n//   };\n\n//   const processAudio = async (audioBlob) => {\n//     setIsProcessing(true);\n//     try {\n//       const reader = new FileReader();\n//       reader.readAsDataURL(audioBlob);\n//       reader.onloadend = async () => {\n//         const base64Audio = reader.result.split(',')[1];\n\n//         const response = await fetch('http://localhost:8003/process-audio', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({\n//             audio: base64Audio\n//           })\n//         });\n\n//         if (!response.ok) throw new Error('Network response was not ok');\n\n//         const data = await response.json();\n//         setTranscription(data.transcription);\n//         setAiResponse(data.ai_response);\n\n//         if (data.audio_response) {\n//           const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n//           audio.play();\n//         }\n//       };\n//     } catch (error) {\n//       console.error('Error processing audio:', error);\n//     } finally {\n//       setIsProcessing(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#1a1b26] to-[#232334]\">\n//       {/* Header */}\n//       <div className=\"border-b border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\">\n//         <div className=\"max-w-4xl mx-auto flex items-center justify-between\">\n//           <h1 className=\"text-white text-2xl font-bold flex items-center gap-3\">\n//             <MessageSquare className=\"w-6 h-6 text-blue-400\" />\n//             Voice Assistant\n//           </h1>\n//           <div className=\"text-gray-400 text-sm flex items-center gap-2\">\n//             {isRecording && (\n//               <div className=\"flex items-center gap-2\">\n//                 <span className=\"animate-pulse w-2 h-2 rounded-full bg-red-500\"></span>\n//                 Recording...\n//               </div>\n//             )}\n//           </div>\n//         </div>\n//       </div>\n\n//       {/* Chat container */}\n//       <div className=\"flex-1 overflow-y-auto p-6 space-y-6\">\n//         <div className=\"max-w-4xl mx-auto\">\n//           {messages.length === 0 && (\n//             <div className=\"text-center py-20\">\n//               <div className=\"w-16 h-16 mx-auto mb-6 rounded-full bg-blue-500/10 flex items-center justify-center\">\n//                 <MessageSquare className=\"w-8 h-8 text-blue-400\" />\n//               </div>\n//               <h2 className=\"text-white text-xl font-semibold mb-2\">Welcome to Voice Assistant</h2>\n//               <p className=\"text-gray-400\">Start a conversation by clicking the microphone below</p>\n//             </div>\n//           )}\n          \n//           {messages.map((message, index) => (\n//             <div key={index} \n//                  className={`flex items-start space-x-3 ${message.type === 'user' ? 'justify-end' : 'justify-start'} mb-6`}>\n//               <div className={`max-w-[80%] rounded-2xl p-5 shadow-lg transform transition-all duration-200 ${\n//                 message.type === 'user' \n//                   ? 'bg-blue-500/10 text-white border border-blue-500/20' \n//                   : 'bg-[#2a2b3d] text-white'\n//               } ${message.loading ? 'opacity-50' : 'hover:scale-[1.02]'}`}>\n//                 {message.loading ? (\n//                   <div className=\"flex items-center space-x-3\">\n//                     <Loader className=\"animate-spin\" size={16} />\n//                     <span>{message.content}</span>\n//                   </div>\n//                 ) : (\n//                   <div className=\"flex items-start gap-3\">\n//                     <div className=\"w-8 h-8 rounded-full flex items-center justify-center flex-shrink-0\">\n//                       {message.type === 'user' ? (\n//                         <div className=\"bg-blue-500/20 w-full h-full rounded-full flex items-center justify-center\">\n//                           <Volume2 size={14} className=\"text-blue-400\" />\n//                         </div>\n//                       ) : (\n//                         <div className=\"bg-purple-500/20 w-full h-full rounded-full flex items-center justify-center\">\n//                           <MessageSquare size={14} className=\"text-purple-400\" />\n//                         </div>\n//                       )}\n//                     </div>\n//                     <div className=\"flex-1\">\n//                       <div className=\"text-sm text-gray-400 mb-1\">\n//                         {message.type === 'user' ? 'You' : 'Assistant'}\n//                       </div>\n//                       <div className=\"text-white\">{message.content}</div>\n//                     </div>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           ))}\n          \n//           {error && (\n//             <div className=\"p-4 text-red-400 bg-red-500/10 border border-red-500/20 rounded-lg mb-6 animate-shake\">\n//               <div className=\"flex items-center gap-2\">\n//                 <div className=\"w-4 h-4 rounded-full bg-red-500/20 flex items-center justify-center\">\n//                   <span className=\"block w-1 h-1 rounded-full bg-red-400\"></span>\n//                 </div>\n//                 {error}\n//               </div>\n//             </div>\n//           )}\n//           <div ref={bottomRef} />\n//         </div>\n//       </div>\n\n//       {/* Control bar */}\n//       <div className=\"border-t border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\">\n//         <div className=\"max-w-4xl mx-auto flex items-center gap-4\">\n//           <button\n//             onClick={isRecording ? stopRecording : startRecording}\n//             disabled={isProcessing}\n//             className={`p-4 rounded-full transition-all duration-300 transform hover:scale-105 ${\n//               isRecording \n//                 ? 'bg-red-500 hover:bg-red-600' \n//                 : 'bg-blue-500 hover:bg-blue-600'\n//             } text-white disabled:opacity-50 disabled:hover:scale-100 shadow-lg ${\n//               isRecording ? 'shadow-red-500/20' : 'shadow-blue-500/20'\n//             }`}\n//           >\n//             {isRecording ? <Square size={24} /> : <Mic size={24} />}\n//           </button>\n          \n//           <div className=\"flex-1\">\n//             <div className=\"h-14 rounded-2xl bg-[#2a2b3d] flex items-center px-6 text-gray-400 border border-gray-700/50\">\n//               {isProcessing ? (\n//                 <div className=\"flex items-center gap-3\">\n//                   <Loader className=\"animate-spin\" size={16} />\n//                   <span>Processing audio...</span>\n//                 </div>\n//               ) : (\n//                 <div className=\"flex items-center gap-3\">\n//                   <MessageSquare size={16} className=\"text-blue-400\" />\n//                   <span>Click the microphone to start recording</span>\n//                 </div>\n//               )}\n//             </div>\n//           </div>\n\n//           {isProcessing && (\n//             <div className=\"w-14 h-14 rounded-full bg-[#2a2b3d] flex items-center justify-center border border-gray-700/50\">\n//               <Loader className=\"animate-spin text-blue-400\" size={20} />\n//             </div>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AudioChat;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Mic, Square, Loader, Volume2, MessageSquare, Send } from 'lucide-react';\n\nconst AudioChat = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [error, setError] = useState('');\n  const [textInput, setTextInput] = useState('');\n  const mediaRecorderRef = useRef(null);\n  const audioChunksRef = useRef([]);\n  const bottomRef = useRef(null);\n  const inputRef = useRef(null);\n\n  const scrollToBottom = () => {\n    bottomRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const startRecording = async () => {\n    try {\n      setError('');\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      audioChunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (event) => {\n        if (event.data.size > 0) {\n          audioChunksRef.current.push(event.data);\n        }\n      };\n\n      mediaRecorder.onstop = async () => {\n        const audioBlob = new Blob(audioChunksRef.current, { type: 'audio/wav' });\n        await processAudio(audioBlob);\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n    } catch (error) {\n      console.error('Error accessing microphone:', error);\n      setError('Error accessing microphone. Please ensure permissions are granted.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      setIsRecording(false);\n      mediaRecorderRef.current.stream.getTracks().forEach(track => track.stop());\n    }\n  };\n\n  const processAudio = async (audioBlob) => {\n    setIsProcessing(true);\n    try {\n      const reader = new FileReader();\n      reader.readAsDataURL(audioBlob);\n      reader.onloadend = async () => {\n        const base64Audio = reader.result.split(',')[1];\n        setMessages(prev => [...prev, { type: 'user', content: 'Recording sent...', loading: true }]);\n\n        const response = await fetch('http://localhost:8003/process-audio', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            audio: base64Audio,\n            type: 'audio'\n          })\n        });\n\n        if (!response.ok) throw new Error('Network response was not ok');\n\n        const data = await response.json();\n        setMessages(prev => [\n          ...prev.filter(msg => !msg.loading),\n          { type: 'user', content: data.transcription },\n          { type: 'assistant', content: data.ai_response }\n        ]);\n\n        if (data.audio_response) {\n          const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n          await audio.play();\n        }\n      };\n    } catch (error) {\n      console.error('Error processing audio:', error);\n      setError(`Error processing audio: ${error.message}`);\n      setMessages(prev => prev.filter(msg => !msg.loading));\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  const handleTextSubmit = async (e) => {\n    e.preventDefault();\n    if (!textInput.trim() || isProcessing) return;\n\n    setIsProcessing(true);\n    try {\n      setMessages(prev => [...prev, { type: 'user', content: textInput }]);\n      \n      const response = await fetch('http://localhost:8003/process-text', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          text: textInput,\n          type: 'text'\n        })\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok');\n\n      const data = await response.json();\n      setMessages(prev => [...prev, { type: 'assistant', content: data.response }]);\n\n      if (data.audio_response) {\n        const audio = new Audio(`data:audio/mp3;base64,${data.audio_response}`);\n        await audio.play();\n      }\n\n      setTextInput('');\n    } catch (error) {\n      console.error('Error processing text:', error);\n      setError(`Error: ${error.message}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gradient-to-b from-[#1a1b26] to-[#232334]\">\n      {/* Header stays the same */}\n      <div className=\"border-b border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\">\n        <div className=\"max-w-4xl mx-auto flex items-center justify-between\">\n          <h1 className=\"text-white text-2xl font-bold flex items-center gap-3\">\n            <MessageSquare className=\"w-6 h-6 text-blue-400\" />\n            Voice Assistant\n          </h1>\n          <div className=\"text-gray-400 text-sm flex items-center gap-2\">\n            {isRecording && (\n              <div className=\"flex items-center gap-2\">\n                <span className=\"animate-pulse w-2 h-2 rounded-full bg-red-500\"></span>\n                Recording...\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Chat container stays mostly the same */}\n      <div className=\"flex-1 overflow-y-auto p-6 space-y-6\">\n        {/* ... Previous chat container code ... */}\n      </div>\n\n      {/* Updated Control bar with text input */}\n      <div className=\"border-t border-gray-700/50 p-6 bg-[#1a1b26]/50 backdrop-blur-sm\">\n        <form onSubmit={handleTextSubmit} className=\"max-w-4xl mx-auto flex items-center gap-4\">\n          <button\n            type=\"button\"\n            onClick={isRecording ? stopRecording : startRecording}\n            disabled={isProcessing}\n            className={`p-4 rounded-full transition-all duration-300 transform hover:scale-105 ${\n              isRecording \n                ? 'bg-red-500 hover:bg-red-600' \n                : 'bg-blue-500 hover:bg-blue-600'\n            } text-white disabled:opacity-50 disabled:hover:scale-100 shadow-lg ${\n              isRecording ? 'shadow-red-500/20' : 'shadow-blue-500/20'\n            }`}\n          >\n            {isRecording ? <Square size={24} /> : <Mic size={24} />}\n          </button>\n          \n          <div className=\"flex-1 relative\">\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={textInput}\n              onChange={(e) => setTextInput(e.target.value)}\n              disabled={isRecording || isProcessing}\n              placeholder={isProcessing ? 'Processing...' : 'Type a message or click the microphone to record'}\n              className=\"w-full h-14 rounded-2xl bg-[#2a2b3d] px-6 text-white border border-gray-700/50 focus:outline-none focus:border-blue-500/50 disabled:opacity-50\"\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={!textInput.trim() || isProcessing || isRecording}\n            className=\"p-4 rounded-full bg-blue-500 hover:bg-blue-600 text-white disabled:opacity-50 transition-all duration-300 transform hover:scale-105 shadow-lg shadow-blue-500/20\"\n          >\n            <Send size={24} />\n          </button>\n\n          {isProcessing && (\n            <div className=\"w-14 h-14 rounded-full bg-[#2a2b3d] flex items-center justify-center border border-gray-700/50\">\n              <Loader className=\"animate-spin text-blue-400\" size={20} />\n            </div>\n          )}\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AudioChat;"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,aAAa,EAAEC,IAAI,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjF,MAAMC,SAAS,GAAGA,CAAA,KAAM;EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}